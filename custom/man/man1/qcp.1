.\"                                      -*- nroff -*-
.\" qcmd.1 - Manual page for qcmd, qmv and qcp.
.\"
.\" Copyright (C) 2001, 2002, 2004, 2005, 2007, 2008 Oskar Liljeblad
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU Library General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program; if not, write to the Free Software
.\" Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
.\"
.TH QCMD "1" "December 4, 2007" "qcmd (renameutils)"
.SH NAME
qmv, qcp \- Rename or copy files quickly, editing the file names in a text editor
.SH SYNOPSIS
.B qcp
.RI [ OPTION ]... " " [ FILE ]...

.B qmv
.RI [ OPTION ]... " " [ FILE ]...

.B qcmd
.RI --command= COMMAND " " "" [ OPTION ]... " " [ FILE ]...
.SH DESCRIPTION
This manual page document describes the \fBqcp\fP, \fBqmv\fP and \fBqcmd\fP commands.

The \fBqmv\fP program allows files to be renamed by editing their names
in any text editor. By changing a letter in a text document, a letter
in a filename can be changed. Since the files are listed after each
other, common changes can be made more quickly.

The \fBqcp\fP program works like qmv, but copies files instead of moving
them.

The \fBqmv\fP program was built with safety in mind - bogus renames caused
by human error are avoided by performing as many checks as possible.
Because of this, \fBqmv\fP supports an interactive mode where each step
in the rename procedure can be executed manually. The default is to
start \fBqmv\fP in non-interactive mode. However, when there is a conflict
or error, \fBqmv\fP will drop to interactive mode (instead of losing all
user-made changes). For more information on the renaming process
and interactive mode, see below. This also applies to \fBqcp\fP.

The \fBqcmd\fP program works just like \fBqmv\fP and \fBqcp\fP but allows
you to specify which command to execute.

The \fBls\fP(1) program is used to list files to rename or copy. Therefore
\fBqmv\fP, \fBqcp\fP, and \fBqcmd\fP accepts some \fBls\fP options.
.SH RENAMING/COPYING PROCESS
The process of renaming or copying files consists of many steps. They are:
.TP
.B List files
Generate a list files to rename from command-line arguments
by using \fBls\fP(1).
.TP
.B Create an editable text file
The edit format creates an editable text file with the file names.
.TP
.B Start the editor
Start the text editor and wait until the user has finished editing
it.
.TP
.B Read the edited text file
The edit format reads the edited text file now with updated file names.
.TP
.B Check rename and reorder to resolve conflicts (qmv only)
This is a complicated step which involves the following tasks:

Tag renames where the destination file already exists, renames where
the old file is now missing or inaccessible, and renames
renames where the new name was not changed. Perform a topologic
sort on the renames, so that renaming b\->c, a\->b is possible.
Resolve cross references by renaming into temporary names,
so that renaming e\->f, f\->e (or e\->f, f\->g, g\->e and so on) is possible.

This step results in a plan of renames.
.TP
.B Display the plan.
Display the plan to the user.
.TP
.B Apply the plan.
Apply the plan by actually renaming or copying files (unless \-\-dummy was specified).
.PP
If an error occurs during any of the above steps (except the first),
\fBqmv\fP/\fBqcp\fP drops the user into the interactive mode. This way no changes should
be lost, and errors can be corrected manually before continuing.
See below for a description of the interactive mode.
.SH OPTIONS
These programs follow the usual GNU command line syntax, with long
options starting with two dashes (`-').
.TP
.B \-a, \-\-all
(Passed to \fBls\fP.) Do not hide entries starting with `.'.
.TP
.B \-A, \-\-almost\-all
(Passed to \fBls\fP.) Do not list implied `.' and `..'.
.TP
.B \-B, \-\-ignore\-backups
(Passed to \fBls\fP.) Do not list implied entries ending with `~'.
.TP
.B \-c
(Passed to \fBls\fP.) Sort by ctime (time of last modification).
.TP
.B \-\-command=\fICOMMAND\fR
Execute \fICOMMAND\fR instead of mv or cp.
.TP
.B \-d, \-\-directory
(Passed to \fBls\fP.) List directory entires instead of contents.
.TP
.B \-r, \-\-reverse
(Passed to \fBls\fP.) Reverse order while sorting.
.TP
.B \-R, \-\-recursive
(Passed to \fBls\fP.) List subdirectories recursively.
.TP
.B \-S
(Passed to \fBls\fP.) Sort by file size.
.TP
.B \-\-sort=\fIWORD\fR
(Passed to \fBls\fP.) Sort by extension (\-X), none (\-U), size (\-S),
time (\-t), version (\-v), status (\-c), time (\-t), atime (\-u),
or access (\-u).
.TP
.B \-\-time=\fIWORD\fP
(Passed to \fBls\fP.) If sorting is done by time (\-\-sort=time), sort
by atime, access, use, ctime or status time.
.TP
.B \-t
(Passed to \fBls\fP.) Sort by modification time.
.TP
.B \-u
(Passed to \fBls\fP.) Sort by access time.
.TP
.B \-U
(Passed to \fBls\fP.) Do not sort; list entries in directory order.
.TP
.B \-X
(Passed to \fBls\fP.) Sort alphabetically by entry extension.
.TP
.B \-f, \-\-format=\fIFORMAT\fP
Change edit format of text file. See below for possible values.
.TP
.B \-o, \-\-options=\fIOPTIONS\fP
Pass options to the selected edit format. \fIOPTIONS\fP is in the format

\fIOPTION\fP[=\fIVALUE\fP][,\fIOPTION\fP[=\fIVALUE\fP]...]

For a list of available options for each format, use \-\-options=help
or see below.
.TP
.\".B \-\-show-control-chars
.\"Show non graphic characters as-is when editing renames.
.\".TP
.B \-i, \-\-interactive
Start in command mode (see below for information on this mode).
.TP
.B \-e, \-\-editor=\fIPROGRAM\fP
Specify program to edit text file with. The default program is determined
by looking at the \fBVISUAL\fP environment variable, or if that is not
set, the \fBEDITOR\fP environment variable. If that is not set either,
use the program called \fBeditor\fP.
.TP
.B \-\-ls=\fIPROGRAM\fP
Specify path of the ls program. If you omit the directory, the executable
will be searched for in the directories specified by the PATH environment
variable.
.TP
.B \-v, \-\-verbose
Be more verbose about what is being done.
.TP
.B \-\-dummy
Do everything as usually, except actually renaming any files
("dummy" mode).
.TP
.B \-\-help
Show summary of options.
.TP
.B \-\-version
Output version information and exit.
.SH EDIT FORMATS
An edit format is responsible for generating a text file for editing,
and parsing it once it has been edited. The default format is
dual-column, but there are other formats as well.

Not all edit formats take the same options. Therefore, it is necessary
to specify them using the \-\-options (\-o) option. This option takes a
list of "suboptions" similar to the \-o option in \fBmount\fP(8).

Available edit formats are `single-column' (or `sc'), `dual-column'
(or `dc'), and `destination-only' (or `do'). The default format is
dual-column.
.SH DUAL-COLUMN FORMAT
The \fBdual-column\fP format (`dual-column' or `dc') displays files
in two columns. This is the default and recommended format.
The leftmost column is usually the source file name (which should not
be edited), and the rightmost column the destination file name.
.PP
Supported options:
.TP
.B swap
Swap location of old and new names when editing. I.e. the leftmost
column is now the destination file name, and the rightmost the
source file name.
.TP
.B separate
Put a blank line between all renames.
.TP
.B tabsize=\fISIZE\fP
By default, tab characters of size 8 are used to separate the columns.
With this option the width of these tab characters can be changed.
.TP
.B spaces
Use space characters instead of tab characters when indenting.
.TP
.B width=\fIWIDTH\fP
This option specifies the character position (horizontally) which the
second file name starts at.
.TP
.B autowidth
Normally, if the source file name is longer than \fBwidth\fP characters,
the destination name is printed on the next line instead.
With this option enabled however, qmv/qcp will adjust the width so
that source and destination file names can be displayed on one
line.

If a width has been specified with \fBwidth\fP prior to \fBautowidth\fP,
that width will be used as a minimum width.

Example: Assume that \fBwidth=10,autowidth\fP is specified. Even if all
source file names are shorter than five characters, the split width would
be 10. If there had been one file name longer than 10 characters, the
final width would have been more than 10 characters.

This option is enabled by default.
.TP
.B indicator1=\fITEXT\fP
Text to put before the first file name (column).
.TP
.B indicator2=\fITEXT\fP
Text to put before the second file name (column).
.TP
.B help
Show summary of edit format options.
.SH SINGLE-COLUMN FORMAT
The \fBsingle-column\fP format (`single-column' or `sc') displays
files in a single column - first source file name and on the next
line the destination file name.
.PP
Supported options:
.TP
.B swap
Swap location of old and new names when editing. I.e. the first
line will contain the destination file name, and the next line the
source file name.
.TP
.B separate
Put a blank line between all renames.
.TP
.B indicator1=\fITEXT\fP
Text to put before the first file name.
.TP
.B indicator2=\fITEXT\fP
Text to put before the second file name.
.TP
.B help
Show summary of edit format options.
.SH DESTINATION-ONLY FORMAT
The \fBdestination-only\fP format (`destination-only' or `do') displays
files only the destination file name, one on each line. This format is
generally not recommended, since the only way to identify source file
name is by looking at the line number. But it may be useful with some
text editors.
.PP
Supported options:
.TP
.B separate
Put a blank line between all renames (file names).
.SH INTERACTIVE MODE
In interactive mode \fBqmv\fP/\fBqcp\fP reads commands from the keyboard,
parses them, and executes them. This is done using GNU readline.
.PP
The following commands are available:
.TP
.B ls, list \fR[\fIOPTIONS\fR].. [\fIFILES\fR]..
Select files to rename. If no files are specified, select all files in
current directory. The accepted options are those which are passed to
\fBls\fP(1). Use `help ls' to display a list of these.
.TP
.B import \fIFILE\fR
Read files to rename from a text file. Each line should correspond to an
existing file to rename.
.TP
.B ed, edit
Edit renames in a text editor. If this command has been run before, and
not `all' is specified, only edit renames with errors.
.TP
.B plan
Display the current rename-plan. (This plan is created after `edit'.)
.TP
.B apply
Apply the current plan, i.e. rename files. Only those files marked as OK
in the plan will be renamed.
.TP
.B retry
If some rename failed earlier during `apply', this command will try those
renames again.
.TP
.B show
Display the value of the specified configuration variable, or all
variables if none specified. See below for a list of configuration
variables.
.TP
.B set \fRVARIABLE VALUE
Set the value of a configuration variable.
.TP
.B exit, quit
Exit the program. If there are unapplied changes, the user will
be notified so, and it will be necessary to run this command
an extra time to exit the program.
.TP
.B help \fR[\fIls\fP|\fIusage\fP]
If `ls' is specified, display list options. If `usage' is specified,
display accepted command line options. Otherwise display help on
commands in interactive mode.
.TP
.B version
Display version information.
.SH VARIABLES
The following variables are available in interactive mode:
.TP
.\".B show-control-chars \fIBOOLEAN\fP
.\".TP
.B dummy \fIBOOLEAN\fP
.TP
.B editor \fISTRING\fP
.TP
.B format \fISTRING\fP
.TP
.B options \fISTRING\fP
These variables corresponds to the options with the same name.
.TP
.B tempfile \fISTRING\fP
This variable contains the name of the temporary file which is
edited with `edit'. It cannot be set; only be read with `show'.
.PP
A boolean value is specified as `0', `false', `no', `off'
or `1', `true', `yes', and `on'. Strings are specified without
quotes.
.SH EXAMPLES
Edit names of files in current directory.
.br
	\fBqmv\fP
.PP
Edit names of files with extension `.c'. Sort files by modification time.
.br
	\fBqmv \-t *.c\fP
.PP
Edit names of files using the nedit editor and with column width 100.
.br
	\fBqmv \-enedit \-owidth=100
.SH REPORTING BUGS
Report bugs to <\fIoskar@osk.mine.nu\fP>.
.SH AUTHOR
The author of \fBrenameutils\fP and this manual page is Oskar Liljeblad <\fIoskar@osk.mine.nu\fP>.
.SH COPYRIGHT
Copyright \(co 2001, 2002, 2004, 2005, 2007, 2008, 2011 Oskar Liljeblad

This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
